name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || echo "No lint script found, skipping..."

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run external tests
      run: npm run test:external

    - name: Run all tests with coverage and generate reports
      run: |
        npm run test:ci
        npx nyc report --reporter=lcov --reporter=text-summary --reporter=html

    - name: Generate test report
      run: |
        mkdir -p public/coverage
        mkdir -p public/tests
        cp -r coverage/* public/coverage/ || echo "No coverage files"
        cp -r mochawesome-report/* public/tests/ || echo "No test report files"

    - name: Create index page
      run: |
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>Car Rental API - Test Reports</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .container { max-width: 800px; margin: 0 auto; }
            .card { background: #f5f5f5; padding: 20px; margin: 20px 0; border-radius: 8px; }
            a { color: #007bff; text-decoration: none; }
            a:hover { text-decoration: underline; }
            h1 { color: #333; }
            h2 { color: #666; }
          </style>
        </head>
        <body>
          <div class="container">
            <h1>üöó Car Rental API - Test Reports</h1>
            <p>Comprehensive testing reports for the Car Rental API project.</p>
            
            <div class="card">
              <h2>üìä Coverage Report</h2>
              <p>Code coverage analysis showing which parts of the code are tested.</p>
              <a href="coverage/index.html">View Coverage Report ‚Üí</a>
            </div>
            
            <div class="card">
              <h2>üß™ Test Results</h2>
              <p>Detailed test execution results with pass/fail status.</p>
              <a href="tests/mochawesome.html">View Test Results ‚Üí</a>
            </div>
            
            <div class="card">
              <h2>üìö API Documentation</h2>
              <p>Interactive Swagger documentation for all endpoints.</p>
              <a href="https://your-app-url.com/api-docs" target="_blank">View API Docs ‚Üí</a>
            </div>
            
            <div class="card">
              <h2>üîó Quick Links</h2>
              <ul>
                <li><a href="https://github.com/your-username/car-rental-api">GitHub Repository</a></li>
                <li><a href="https://github.com/your-username/car-rental-api/actions">CI/CD Pipeline</a></li>
                <li><a href="https://codecov.io/gh/your-username/car-rental-api">Codecov Dashboard</a></li>
              </ul>
            </div>
          </div>
        </body>
        </html>
        EOF

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          mochawesome-report/
          public/

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && matrix.node-version == '18.x'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        destination_dir: reports

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: npm audit --audit-level=high --production

  build:
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build || echo "No build script found, skipping..."

    - name: Test application startup
      run: |
        timeout 10s npm start &
        sleep 5
        curl -f http://localhost:3000/api-docs/ || exit 1
        pkill -f "npm start" || true

  notification:
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: always()

    steps:
    - name: Notify success
      if: ${{ needs.test.result == 'success' && needs.security.result == 'success' && needs.build.result == 'success' }}
      run: echo "‚úÖ All checks passed successfully!"

    - name: Notify failure
      if: ${{ needs.test.result == 'failure' || needs.security.result == 'failure' || needs.build.result == 'failure' }}
      run: echo "‚ùå Some checks failed. Please review the logs."
